#!/usr/bin/env python3
"""
Script de prueba simplificado para el m√≥dulo de √≥rdenes de producci√≥n
Versi√≥n que usa Alt+Tab para cambiar al escritorio remoto
"""

import os
import sys
import time
import json
from pathlib import Path

# Agregar el directorio ra√≠z al path para importar m√≥dulos
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from rpa.vision.main import Vision
from rpa.config_manager import ConfigManager
from rpa.modules.production_order import ProductionOrderHandler
from rpa.simple_logger import rpa_logger


def crear_datos_ficticios():
    """Crear datos ficticios para la prueba de producci√≥n"""
    datos_ficticios = {
        "numero_articulo": "ART-FICTICIO-001",
        "numero_pedido_interno": "PI-FICTICIO-2024-001",
        "cantidad": 150,
        "fecha_finalizacion": "30/12/2024",
        "unidad_medida": "PCS",
        "centro_trabajo": "CT-FICTICIO-01",
        "observaciones": "Orden de producci√≥n ficticia para pruebas del RPA"
    }
    return datos_ficticios


def mostrar_datos_prueba(datos):
    """Mostrar los datos de prueba de forma clara"""
    print("\nüìã DATOS DE PRUEBA FICTICIOS")
    print("=" * 50)
    print(f"üè∑Ô∏è  Art√≠culo: {datos['numero_articulo']}")
    print(f"üìù Pedido Interno: {datos['numero_pedido_interno']}")
    print(f"üìä Cantidad: {datos['cantidad']} {datos['unidad_medida']}")
    print(f"üìÖ Fecha Finalizaci√≥n: {datos['fecha_finalizacion']}")
    print(f"üè≠ Centro Trabajo: {datos['centro_trabajo']}")
    print(f"üí¨ Observaciones: {datos['observaciones']}")
    print("=" * 50)


def cambiar_a_escritorio_remoto():
    """Funci√≥n simplificada para cambiar al escritorio remoto usando Alt+Tab"""
    print("üîÑ Cambiando al escritorio remoto...")
    
    try:
        import pyautogui
        
        # M√©todo simple: usar Alt+Tab para cambiar a la ventana anterior
        print("   - Usando Alt+Tab para cambiar ventana...")
        pyautogui.hotkey('alt', 'tab')
        time.sleep(2.0)  # Esperar a que se active la ventana
        
        print("‚úÖ Cambio de ventana completado")
        return True
        
    except Exception as e:
        print(f"‚ö†Ô∏è  Error cambiando ventana: {e}")
        print("üí° El script continuar√°, pero aseg√∫rate de que el escritorio remoto est√© activo")
        time.sleep(3.0)
        return False


def test_produccion_simple():
    """Funci√≥n principal para probar producci√≥n con cambio simple al escritorio remoto"""
    print("üß™ PRUEBA DE PRODUCCI√ìN SIMPLIFICADA")
    print("=" * 60)
    
    try:
        # 1. Inicializar componentes
        print("üîÑ Inicializando componentes del RPA...")
        config = ConfigManager()
        vision = Vision()
        production_handler = ProductionOrderHandler(vision, config)
        
        # 2. Crear datos ficticios
        print("üîÑ Creando datos ficticios...")
        datos_ficticios = crear_datos_ficticios()
        mostrar_datos_prueba(datos_ficticios)
        
        # 3. Preparaci√≥n manual
        print("\n‚è∏Ô∏è  PREPARACI√ìN MANUAL REQUERIDA")
        print("=" * 40)
        print("üîß PASOS A SEGUIR:")
        print("1. Abre SAP Business One")
        print("2. Aseg√∫rate de estar en la pantalla principal")
        print("3. Ten el escritorio remoto abierto")
        print("4. Verifica que las im√°genes de referencia est√©n disponibles")
        print("5. El script usar√° Alt+Tab para cambiar al escritorio remoto")
        
        input("\n‚è∏Ô∏è  Presiona ENTER cuando est√©s listo para comenzar...")
        
        # 4. Retraso inicial para cambio manual
        print("\n‚è∏Ô∏è  RETRASO INICIAL - Preparando cambio al escritorio remoto...")
        print("   Tienes 5 segundos para prepararte...")
        
        for i in range(5, 0, -1):
            print(f"   Iniciando en {i}...")
            time.sleep(1)
        
        # 5. Cambiar al escritorio remoto usando Alt+Tab
        print("\nüîÑ PASO 0: Cambiando al escritorio remoto...")
        escritorio_remoto_activado = cambiar_a_escritorio_remoto()
        
        if escritorio_remoto_activado:
            print("‚úÖ Escritorio remoto activado exitosamente")
        else:
            print("‚ö†Ô∏è  Continuando sin confirmaci√≥n del escritorio remoto")
        
        # 6. Ejecutar navegaci√≥n
        print("\nüîÑ PASO 1: Navegando al m√≥dulo de producci√≥n...")
        print("   - Presionando Alt+M...")
        print("   - Presionando P...")
        print("   - Buscando bot√≥n 'Orden de Fabricaci√≥n'...")
        
        navigation_success = production_handler.navigate_to_production()
        
        if not navigation_success:
            print("‚ùå Error en la navegaci√≥n.")
            print("üí° Verifica:")
            print("   - Que SAP est√© abierto")
            print("   - Que est√©s en la pantalla principal")
            print("   - Que las im√°genes de referencia existan")
            return False
        
        print("‚úÖ Navegaci√≥n completada exitosamente")
        
        # 7. Verificar formulario
        print("\n‚è∏Ô∏è  VERIFICACI√ìN DEL FORMULARIO")
        print("=" * 40)
        print("üîç Verifica que:")
        print("   - El formulario de orden de producci√≥n est√© abierto")
        print("   - Todos los campos est√©n visibles")
        print("   - El formulario est√© listo para recibir datos")
        
        input("\n‚è∏Ô∏è  Presiona ENTER para continuar con el llenado de campos...")
        
        # 8. Procesar orden de producci√≥n
        print("\nüîÑ PASO 2: Llenando formulario con datos ficticios...")
        print("   - Cargando art√≠culo...")
        print("   - Cargando pedido interno...")
        print("   - Cargando cantidad...")
        print("   - Cargando fecha de finalizaci√≥n...")
        
        success = production_handler.process_production_order(
            datos_ficticios, 
            auto_click_crear=False  # NO hacer clic autom√°tico
        )
        
        if success:
            print("\nüéâ FORMULARIO COMPLETADO EXITOSAMENTE")
            print("=" * 50)
            print("‚úÖ Todos los campos han sido llenados")
            print("‚úÖ Los datos ficticios est√°n en el formulario")
            print("‚úÖ El formulario est√° listo para revisi√≥n")
            
            print("\nüí° PR√ìXIMOS PASOS:")
            print("   üîç Revisa todos los datos en SAP:")
            print(f"      - Art√≠culo: {datos_ficticios['numero_articulo']}")
            print(f"      - Pedido: {datos_ficticios['numero_pedido_interno']}")
            print(f"      - Cantidad: {datos_ficticios['cantidad']}")
            print(f"      - Fecha: {datos_ficticios['fecha_finalizacion']}")
            
            print("\n   üéØ DECISI√ìN MANUAL:")
            print("      - Haz clic en 'Crear' si los datos est√°n correctos")
            print("      - Haz clic en 'Borrar' si quieres cancelar")
            print("      - Modifica cualquier campo si es necesario")
            
            # 9. Pausa final
            print("\n‚è∏Ô∏è  ESPERANDO DECISI√ìN MANUAL")
            print("=" * 40)
            print("El script ha terminado. Toma tu decisi√≥n en SAP.")
            print("Presiona ENTER cuando hayas completado la acci√≥n...")
            
            input()
            print("‚úÖ Prueba de producci√≥n simplificada finalizada correctamente")
            
            # 10. Resumen final
            print("\nüìä RESUMEN DE LA PRUEBA")
            print("=" * 40)
            print("‚úÖ Cambio a escritorio remoto: " + ("Exitoso" if escritorio_remoto_activado else "Manual"))
            print("‚úÖ Navegaci√≥n: Exitosa")
            print("‚úÖ Carga de datos: Exitosa")
            print("‚úÖ Validaci√≥n: Exitosa")
            print("‚úÖ Control manual: Funcionando")
            print("‚úÖ M√≥dulo de producci√≥n: LISTO PARA USO")
            
        else:
            print("‚ùå Error procesando la orden de producci√≥n")
            print("üí° Verifica los logs para m√°s detalles")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error durante la prueba: {e}")
        rpa_logger.error(f"Error en test_produccion_simple: {e}")
        return False


def main():
    """Funci√≥n principal"""
    print("üöÄ INICIANDO PRUEBA DE PRODUCCI√ìN SIMPLIFICADA")
    print("=" * 60)
    print("üéØ Objetivo: Probar el m√≥dulo de producci√≥n con cambio simple al escritorio remoto")
    print("üéØ Modo: Control manual (sin auto-click en crear)")
    print("üéØ Caracter√≠stica: Alt+Tab para cambiar al escritorio remoto")
    print("üéØ Resultado esperado: Formulario llenado para revisi√≥n humana")
    
    # Ejecutar prueba
    if test_produccion_simple():
        print("\nüéâ PRUEBA COMPLETADA EXITOSAMENTE")
        print("=" * 60)
        print("‚úÖ El m√≥dulo de producci√≥n funciona correctamente")
        print("‚úÖ El cambio al escritorio remoto funciona")
        print("‚úÖ Los datos ficticios se cargaron sin problemas")
        print("‚úÖ El control manual est√° funcionando")
        print("‚úÖ El m√≥dulo est√° listo para uso en producci√≥n")
    else:
        print("\n‚ùå LA PRUEBA FALL√ì")
        print("=" * 60)
        print("üí° Revisa los errores y verifica la configuraci√≥n")
        print("üí° Aseg√∫rate de que SAP est√© abierto y accesible")


if __name__ == "__main__":
    main()
