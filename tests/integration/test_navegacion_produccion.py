#!/usr/bin/env python3
"""
Prueba de Navegaci√≥n del M√≥dulo de Producci√≥n
Verifica que la navegaci√≥n funcione correctamente asumiendo que SAP ya est√° abierto
"""

import os
import sys
import time
from datetime import datetime

# Importar componentes del RPA
from rpa.simple_logger import rpa_logger
from rpa.config_manager import ConfigManager
from rpa.vision.main import Vision
from rpa.modules.production_order.production_order_handler import ProductionOrderHandler

def test_production_navigation():
    """Prueba la navegaci√≥n en el m√≥dulo de producci√≥n"""
    print("üß™ Probando navegaci√≥n al m√≥dulo de producci√≥n...")
    
    try:
        # Inicializar componentes
        print("üìã Inicializando componentes...")
        config_manager = ConfigManager()
        vision_system = Vision()
        production_handler = ProductionOrderHandler(vision_system, config_manager)
        
        print("‚úÖ Componentes inicializados")
        
        # Probar navegaci√≥n a producci√≥n
        print("\nüîÑ Probando navegaci√≥n al m√≥dulo de producci√≥n...")
        success = production_handler.navigate_to_production()
        
        if success:
            print("‚úÖ Navegaci√≥n a producci√≥n exitosa")
            return True
        else:
            print("‚ùå Navegaci√≥n a producci√≥n fall√≥")
            return False
            
    except Exception as e:
        print(f"‚ùå Error en prueba de navegaci√≥n: {e}")
        return False

def test_production_vision():
    """Prueba el sistema de visi√≥n para producci√≥n"""
    print("\nüëÅÔ∏è Probando sistema de visi√≥n para producci√≥n...")
    
    try:
        vision = Vision()
        
        # Probar detecci√≥n de elementos
        print("üîç Probando detecci√≥n de elementos de producci√≥n...")
        
        # Verificar que las im√°genes de referencia existan
        reference_dir = "rpa/vision/reference_images/production"
        required_images = [
            "sap_orden_fabricacion_button.png",
            "sap_produccion_crear_button.png",
            "sap_articulo_field.png",
            "sap_cantidad_field.png",
            "sap_fecha_finalizacion_field.png"
        ]
        
        for image in required_images:
            image_path = os.path.join(reference_dir, image)
            if os.path.exists(image_path):
                print(f"‚úÖ {image} - Existe")
            else:
                print(f"‚ùå {image} - NO EXISTE")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error probando sistema de visi√≥n: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("=" * 60)
    print("üß™ PRUEBA DE NAVEGACI√ìN DEL M√ìDULO DE PRODUCCI√ìN")
    print("=" * 60)
    print(f"üìÖ Fecha: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    print("‚ö†Ô∏è  IMPORTANTE: Aseg√∫rate de que:")
    print("   1. SAP Business One est√© abierto")
    print("   2. Est√©s en la pantalla del escritorio de SAP")
    print("   3. La ventana est√© maximizada")
    print()
    
    input("Presiona Enter cuando SAP est√© listo...")
    
    # Prueba 1: Sistema de visi√≥n para producci√≥n
    if not test_production_vision():
        print("\n‚ùå PRUEBA FALLIDA: Sistema de visi√≥n para producci√≥n")
        return False
    
    # Prueba 2: Navegaci√≥n en producci√≥n
    if not test_production_navigation():
        print("\n‚ùå PRUEBA FALLIDA: Navegaci√≥n en producci√≥n")
        return False
    
    print("\n" + "=" * 60)
    print("‚úÖ TODAS LAS PRUEBAS EXITOSAS")
    print("=" * 60)
    print("\nüìã La navegaci√≥n del m√≥dulo de producci√≥n funciona correctamente")
    print("üöÄ El launcher funcional deber√≠a funcionar ahora")
    print("üè≠ Selecciona 'M√≥dulo de Producci√≥n' en el launcher")
    
    return True

if __name__ == "__main__":
    try:
        success = main()
        if success:
            print("\n‚úÖ Prueba completada exitosamente")
        else:
            print("\n‚ùå Prueba fall√≥")
    except Exception as e:
        print(f"\n‚ùå Error inesperado: {e}")
    
    input("\nPresiona Enter para continuar...")
